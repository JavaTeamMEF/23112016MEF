// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mef.sigfip.elaboration.web;

import com.mef.sigfip.elaboration.TAction;
import com.mef.sigfip.elaboration.TActivite;
import com.mef.sigfip.elaboration.TArticle;
import com.mef.sigfip.elaboration.TAxeDet;
import com.mef.sigfip.elaboration.TAxeScape;
import com.mef.sigfip.elaboration.TBailleur;
import com.mef.sigfip.elaboration.TCategorieService;
import com.mef.sigfip.elaboration.TChapitre;
import com.mef.sigfip.elaboration.TClasse;
import com.mef.sigfip.elaboration.TFonction;
import com.mef.sigfip.elaboration.TGestion;
import com.mef.sigfip.elaboration.TGrandeNature;
import com.mef.sigfip.elaboration.TGroupe;
import com.mef.sigfip.elaboration.TImputBudgetaire;
import com.mef.sigfip.elaboration.TLigne;
import com.mef.sigfip.elaboration.TLocBenef;
import com.mef.sigfip.elaboration.TLocService;
import com.mef.sigfip.elaboration.TNumOrdreServ;
import com.mef.sigfip.elaboration.TParagraphe;
import com.mef.sigfip.elaboration.TPrefecture;
import com.mef.sigfip.elaboration.TProgramme;
import com.mef.sigfip.elaboration.TRegion;
import com.mef.sigfip.elaboration.TSection;
import com.mef.sigfip.elaboration.TSourceFin;
import com.mef.sigfip.elaboration.TTypeBudget;
import com.mef.sigfip.elaboration.TTypeService;
import com.mef.sigfip.elaboration.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<TAction, String> ApplicationConversionServiceFactoryBean.getTActionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TAction, java.lang.String>() {
            public String convert(TAction tAction) {
                return new StringBuilder().append(tAction.getLib_action()).toString();
            }
        };
    }
    
    public Converter<Long, TAction> ApplicationConversionServiceFactoryBean.getIdToTActionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TAction>() {
            public com.mef.sigfip.elaboration.TAction convert(java.lang.Long id) {
                return TAction.findTAction(id);
            }
        };
    }
    
    public Converter<String, TAction> ApplicationConversionServiceFactoryBean.getStringToTActionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TAction>() {
            public com.mef.sigfip.elaboration.TAction convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TAction.class);
            }
        };
    }
    
    public Converter<TActivite, String> ApplicationConversionServiceFactoryBean.getTActiviteToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TActivite, java.lang.String>() {
            public String convert(TActivite tActivite) {
                return new StringBuilder().append(tActivite.getLib_activite()).toString();
            }
        };
    }
    
    public Converter<Long, TActivite> ApplicationConversionServiceFactoryBean.getIdToTActiviteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TActivite>() {
            public com.mef.sigfip.elaboration.TActivite convert(java.lang.Long id) {
                return TActivite.findTActivite(id);
            }
        };
    }
    
    public Converter<String, TActivite> ApplicationConversionServiceFactoryBean.getStringToTActiviteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TActivite>() {
            public com.mef.sigfip.elaboration.TActivite convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TActivite.class);
            }
        };
    }
    
    public Converter<TArticle, String> ApplicationConversionServiceFactoryBean.getTArticleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TArticle, java.lang.String>() {
            public String convert(TArticle tArticle) {
                return new StringBuilder().append(tArticle.getLib_article()).toString();
            }
        };
    }
    
    public Converter<Long, TArticle> ApplicationConversionServiceFactoryBean.getIdToTArticleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TArticle>() {
            public com.mef.sigfip.elaboration.TArticle convert(java.lang.Long id) {
                return TArticle.findTArticle(id);
            }
        };
    }
    
    public Converter<String, TArticle> ApplicationConversionServiceFactoryBean.getStringToTArticleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TArticle>() {
            public com.mef.sigfip.elaboration.TArticle convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TArticle.class);
            }
        };
    }
    
    public Converter<TAxeDet, String> ApplicationConversionServiceFactoryBean.getTAxeDetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TAxeDet, java.lang.String>() {
            public String convert(TAxeDet tAxeDet) {
                return new StringBuilder().append(tAxeDet.getLib_axe_det()).toString();
            }
        };
    }
    
    public Converter<Long, TAxeDet> ApplicationConversionServiceFactoryBean.getIdToTAxeDetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TAxeDet>() {
            public com.mef.sigfip.elaboration.TAxeDet convert(java.lang.Long id) {
                return TAxeDet.findTAxeDet(id);
            }
        };
    }
    
    public Converter<String, TAxeDet> ApplicationConversionServiceFactoryBean.getStringToTAxeDetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TAxeDet>() {
            public com.mef.sigfip.elaboration.TAxeDet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TAxeDet.class);
            }
        };
    }
    
    public Converter<TAxeScape, String> ApplicationConversionServiceFactoryBean.getTAxeScapeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TAxeScape, java.lang.String>() {
            public String convert(TAxeScape tAxeScape) {
                return new StringBuilder().append(tAxeScape.getLib_axe_scape()).toString();
            }
        };
    }
    
    public Converter<Long, TAxeScape> ApplicationConversionServiceFactoryBean.getIdToTAxeScapeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TAxeScape>() {
            public com.mef.sigfip.elaboration.TAxeScape convert(java.lang.Long id) {
                return TAxeScape.findTAxeScape(id);
            }
        };
    }
    
    public Converter<String, TAxeScape> ApplicationConversionServiceFactoryBean.getStringToTAxeScapeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TAxeScape>() {
            public com.mef.sigfip.elaboration.TAxeScape convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TAxeScape.class);
            }
        };
    }
    
    public Converter<TBailleur, String> ApplicationConversionServiceFactoryBean.getTBailleurToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TBailleur, java.lang.String>() {
            public String convert(TBailleur tBailleur) {
                return new StringBuilder().append(tBailleur.getLib_bailleur()).toString();
            }
        };
    }
    
    public Converter<Long, TBailleur> ApplicationConversionServiceFactoryBean.getIdToTBailleurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TBailleur>() {
            public com.mef.sigfip.elaboration.TBailleur convert(java.lang.Long id) {
                return TBailleur.findTBailleur(id);
            }
        };
    }
    
    public Converter<String, TBailleur> ApplicationConversionServiceFactoryBean.getStringToTBailleurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TBailleur>() {
            public com.mef.sigfip.elaboration.TBailleur convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TBailleur.class);
            }
        };
    }
    
    public Converter<TCategorieService, String> ApplicationConversionServiceFactoryBean.getTCategorieServiceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TCategorieService, java.lang.String>() {
            public String convert(TCategorieService tCategorieService) {
                return new StringBuilder().append(tCategorieService.getLib_categ_seerv()).toString();
            }
        };
    }
    
    public Converter<Long, TCategorieService> ApplicationConversionServiceFactoryBean.getIdToTCategorieServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TCategorieService>() {
            public com.mef.sigfip.elaboration.TCategorieService convert(java.lang.Long id) {
                return TCategorieService.findTCategorieService(id);
            }
        };
    }
    
    public Converter<String, TCategorieService> ApplicationConversionServiceFactoryBean.getStringToTCategorieServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TCategorieService>() {
            public com.mef.sigfip.elaboration.TCategorieService convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TCategorieService.class);
            }
        };
    }
    
    public Converter<TChapitre, String> ApplicationConversionServiceFactoryBean.getTChapitreToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TChapitre, java.lang.String>() {
            public String convert(TChapitre tChapitre) {
                return new StringBuilder().append(tChapitre.getIb_chap_lib()).toString();
            }
        };
    }
    
    public Converter<Long, TChapitre> ApplicationConversionServiceFactoryBean.getIdToTChapitreConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TChapitre>() {
            public com.mef.sigfip.elaboration.TChapitre convert(java.lang.Long id) {
                return TChapitre.findTChapitre(id);
            }
        };
    }
    
    public Converter<String, TChapitre> ApplicationConversionServiceFactoryBean.getStringToTChapitreConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TChapitre>() {
            public com.mef.sigfip.elaboration.TChapitre convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TChapitre.class);
            }
        };
    }
    
    public Converter<TClasse, String> ApplicationConversionServiceFactoryBean.getTClasseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TClasse, java.lang.String>() {
            public String convert(TClasse tClasse) {
                return new StringBuilder().append(tClasse.getLib_classe()).toString();
            }
        };
    }
    
    public Converter<Long, TClasse> ApplicationConversionServiceFactoryBean.getIdToTClasseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TClasse>() {
            public com.mef.sigfip.elaboration.TClasse convert(java.lang.Long id) {
                return TClasse.findTClasse(id);
            }
        };
    }
    
    public Converter<String, TClasse> ApplicationConversionServiceFactoryBean.getStringToTClasseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TClasse>() {
            public com.mef.sigfip.elaboration.TClasse convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TClasse.class);
            }
        };
    }
    
    public Converter<TFonction, String> ApplicationConversionServiceFactoryBean.getTFonctionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TFonction, java.lang.String>() {
            public String convert(TFonction tFonction) {
                return new StringBuilder().append(tFonction.getLib_fonction()).toString();
            }
        };
    }
    
    public Converter<Long, TFonction> ApplicationConversionServiceFactoryBean.getIdToTFonctionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TFonction>() {
            public com.mef.sigfip.elaboration.TFonction convert(java.lang.Long id) {
                return TFonction.findTFonction(id);
            }
        };
    }
    
    public Converter<String, TFonction> ApplicationConversionServiceFactoryBean.getStringToTFonctionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TFonction>() {
            public com.mef.sigfip.elaboration.TFonction convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TFonction.class);
            }
        };
    }
    
    public Converter<TGestion, String> ApplicationConversionServiceFactoryBean.getTGestionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TGestion, java.lang.String>() {
            public String convert(TGestion tGestion) {
                return new StringBuilder().append(tGestion.getType_gestion()).toString();
            }
        };
    }
    
    public Converter<Long, TGestion> ApplicationConversionServiceFactoryBean.getIdToTGestionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TGestion>() {
            public com.mef.sigfip.elaboration.TGestion convert(java.lang.Long id) {
                return TGestion.findTGestion(id);
            }
        };
    }
    
    public Converter<String, TGestion> ApplicationConversionServiceFactoryBean.getStringToTGestionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TGestion>() {
            public com.mef.sigfip.elaboration.TGestion convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TGestion.class);
            }
        };
    }
    
    public Converter<TGrandeNature, String> ApplicationConversionServiceFactoryBean.getTGrandeNatureToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TGrandeNature, java.lang.String>() {
            public String convert(TGrandeNature tGrandeNature) {
                return new StringBuilder().append(tGrandeNature.getLib_grande_nature()).toString();
            }
        };
    }
    
    public Converter<Long, TGrandeNature> ApplicationConversionServiceFactoryBean.getIdToTGrandeNatureConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TGrandeNature>() {
            public com.mef.sigfip.elaboration.TGrandeNature convert(java.lang.Long id) {
                return TGrandeNature.findTGrandeNature(id);
            }
        };
    }
    
    public Converter<String, TGrandeNature> ApplicationConversionServiceFactoryBean.getStringToTGrandeNatureConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TGrandeNature>() {
            public com.mef.sigfip.elaboration.TGrandeNature convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TGrandeNature.class);
            }
        };
    }
    
    public Converter<TGroupe, String> ApplicationConversionServiceFactoryBean.getTGroupeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TGroupe, java.lang.String>() {
            public String convert(TGroupe tGroupe) {
                return new StringBuilder().append(tGroupe.getLib_groupe()).toString();
            }
        };
    }
    
    public Converter<Long, TGroupe> ApplicationConversionServiceFactoryBean.getIdToTGroupeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TGroupe>() {
            public com.mef.sigfip.elaboration.TGroupe convert(java.lang.Long id) {
                return TGroupe.findTGroupe(id);
            }
        };
    }
    
    public Converter<String, TGroupe> ApplicationConversionServiceFactoryBean.getStringToTGroupeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TGroupe>() {
            public com.mef.sigfip.elaboration.TGroupe convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TGroupe.class);
            }
        };
    }
    
    public Converter<TImputBudgetaire, String> ApplicationConversionServiceFactoryBean.getTImputBudgetaireToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TImputBudgetaire, java.lang.String>() {
            public String convert(TImputBudgetaire tImputBudgetaire) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, TImputBudgetaire> ApplicationConversionServiceFactoryBean.getIdToTImputBudgetaireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TImputBudgetaire>() {
            public com.mef.sigfip.elaboration.TImputBudgetaire convert(java.lang.Long id) {
                return TImputBudgetaire.findTImputBudgetaire(id);
            }
        };
    }
    
    public Converter<String, TImputBudgetaire> ApplicationConversionServiceFactoryBean.getStringToTImputBudgetaireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TImputBudgetaire>() {
            public com.mef.sigfip.elaboration.TImputBudgetaire convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TImputBudgetaire.class);
            }
        };
    }
    
    public Converter<TLigne, String> ApplicationConversionServiceFactoryBean.getTLigneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TLigne, java.lang.String>() {
            public String convert(TLigne tLigne) {
                return new StringBuilder().append(tLigne.getLib_ligne()).toString();
            }
        };
    }
    
    public Converter<Long, TLigne> ApplicationConversionServiceFactoryBean.getIdToTLigneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TLigne>() {
            public com.mef.sigfip.elaboration.TLigne convert(java.lang.Long id) {
                return TLigne.findTLigne(id);
            }
        };
    }
    
    public Converter<String, TLigne> ApplicationConversionServiceFactoryBean.getStringToTLigneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TLigne>() {
            public com.mef.sigfip.elaboration.TLigne convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TLigne.class);
            }
        };
    }
    
    public Converter<TLocBenef, String> ApplicationConversionServiceFactoryBean.getTLocBenefToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TLocBenef, java.lang.String>() {
            public String convert(TLocBenef tLocBenef) {
                return new StringBuilder().append(tLocBenef.getLib_loc_ben()).toString();
            }
        };
    }
    
    public Converter<Long, TLocBenef> ApplicationConversionServiceFactoryBean.getIdToTLocBenefConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TLocBenef>() {
            public com.mef.sigfip.elaboration.TLocBenef convert(java.lang.Long id) {
                return TLocBenef.findTLocBenef(id);
            }
        };
    }
    
    public Converter<String, TLocBenef> ApplicationConversionServiceFactoryBean.getStringToTLocBenefConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TLocBenef>() {
            public com.mef.sigfip.elaboration.TLocBenef convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TLocBenef.class);
            }
        };
    }
    
    public Converter<TLocService, String> ApplicationConversionServiceFactoryBean.getTLocServiceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TLocService, java.lang.String>() {
            public String convert(TLocService tLocService) {
                return new StringBuilder().append(tLocService.getLib_loc_serv()).toString();
            }
        };
    }
    
    public Converter<Long, TLocService> ApplicationConversionServiceFactoryBean.getIdToTLocServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TLocService>() {
            public com.mef.sigfip.elaboration.TLocService convert(java.lang.Long id) {
                return TLocService.findTLocService(id);
            }
        };
    }
    
    public Converter<String, TLocService> ApplicationConversionServiceFactoryBean.getStringToTLocServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TLocService>() {
            public com.mef.sigfip.elaboration.TLocService convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TLocService.class);
            }
        };
    }
    
    public Converter<TNumOrdreServ, String> ApplicationConversionServiceFactoryBean.getTNumOrdreServToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TNumOrdreServ, java.lang.String>() {
            public String convert(TNumOrdreServ tNumOrdreServ) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, TNumOrdreServ> ApplicationConversionServiceFactoryBean.getIdToTNumOrdreServConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TNumOrdreServ>() {
            public com.mef.sigfip.elaboration.TNumOrdreServ convert(java.lang.Long id) {
                return TNumOrdreServ.findTNumOrdreServ(id);
            }
        };
    }
    
    public Converter<String, TNumOrdreServ> ApplicationConversionServiceFactoryBean.getStringToTNumOrdreServConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TNumOrdreServ>() {
            public com.mef.sigfip.elaboration.TNumOrdreServ convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TNumOrdreServ.class);
            }
        };
    }
    
    public Converter<TParagraphe, String> ApplicationConversionServiceFactoryBean.getTParagrapheToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TParagraphe, java.lang.String>() {
            public String convert(TParagraphe tParagraphe) {
                return new StringBuilder().append(tParagraphe.getLib_paragraphe()).toString();
            }
        };
    }
    
    public Converter<Long, TParagraphe> ApplicationConversionServiceFactoryBean.getIdToTParagrapheConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TParagraphe>() {
            public com.mef.sigfip.elaboration.TParagraphe convert(java.lang.Long id) {
                return TParagraphe.findTParagraphe(id);
            }
        };
    }
    
    public Converter<String, TParagraphe> ApplicationConversionServiceFactoryBean.getStringToTParagrapheConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TParagraphe>() {
            public com.mef.sigfip.elaboration.TParagraphe convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TParagraphe.class);
            }
        };
    }
    
    public Converter<TPrefecture, String> ApplicationConversionServiceFactoryBean.getTPrefectureToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TPrefecture, java.lang.String>() {
            public String convert(TPrefecture tPrefecture) {
                return new StringBuilder().append(tPrefecture.getLib_prefecture()).toString();
            }
        };
    }
    
    public Converter<Long, TPrefecture> ApplicationConversionServiceFactoryBean.getIdToTPrefectureConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TPrefecture>() {
            public com.mef.sigfip.elaboration.TPrefecture convert(java.lang.Long id) {
                return TPrefecture.findTPrefecture(id);
            }
        };
    }
    
    public Converter<String, TPrefecture> ApplicationConversionServiceFactoryBean.getStringToTPrefectureConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TPrefecture>() {
            public com.mef.sigfip.elaboration.TPrefecture convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TPrefecture.class);
            }
        };
    }
    
    public Converter<TProgramme, String> ApplicationConversionServiceFactoryBean.getTProgrammeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TProgramme, java.lang.String>() {
            public String convert(TProgramme tProgramme) {
                return new StringBuilder().append(tProgramme.getLib_programme()).toString();
            }
        };
    }
    
    public Converter<Long, TProgramme> ApplicationConversionServiceFactoryBean.getIdToTProgrammeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TProgramme>() {
            public com.mef.sigfip.elaboration.TProgramme convert(java.lang.Long id) {
                return TProgramme.findTProgramme(id);
            }
        };
    }
    
    public Converter<String, TProgramme> ApplicationConversionServiceFactoryBean.getStringToTProgrammeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TProgramme>() {
            public com.mef.sigfip.elaboration.TProgramme convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TProgramme.class);
            }
        };
    }
    
    public Converter<TRegion, String> ApplicationConversionServiceFactoryBean.getTRegionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TRegion, java.lang.String>() {
            public String convert(TRegion tRegion) {
                return new StringBuilder().append(tRegion.getLib_region()).toString();
            }
        };
    }
    
    public Converter<Long, TRegion> ApplicationConversionServiceFactoryBean.getIdToTRegionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TRegion>() {
            public com.mef.sigfip.elaboration.TRegion convert(java.lang.Long id) {
                return TRegion.findTRegion(id);
            }
        };
    }
    
    public Converter<String, TRegion> ApplicationConversionServiceFactoryBean.getStringToTRegionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TRegion>() {
            public com.mef.sigfip.elaboration.TRegion convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TRegion.class);
            }
        };
    }
    
    public Converter<TSection, String> ApplicationConversionServiceFactoryBean.getTSectionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TSection, java.lang.String>() {
            public String convert(TSection tSection) {
                return new StringBuilder().append(tSection.getSec_lib_court()).append(' ').append(tSection.getSec_lib_long()).toString();
            }
        };
    }
    
    public Converter<Long, TSection> ApplicationConversionServiceFactoryBean.getIdToTSectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TSection>() {
            public com.mef.sigfip.elaboration.TSection convert(java.lang.Long id) {
                return TSection.findTSection(id);
            }
        };
    }
    
    public Converter<String, TSection> ApplicationConversionServiceFactoryBean.getStringToTSectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TSection>() {
            public com.mef.sigfip.elaboration.TSection convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TSection.class);
            }
        };
    }
    
    public Converter<TSourceFin, String> ApplicationConversionServiceFactoryBean.getTSourceFinToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TSourceFin, java.lang.String>() {
            public String convert(TSourceFin tSourceFin) {
                return new StringBuilder().append(tSourceFin.getLib_sf()).toString();
            }
        };
    }
    
    public Converter<Long, TSourceFin> ApplicationConversionServiceFactoryBean.getIdToTSourceFinConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TSourceFin>() {
            public com.mef.sigfip.elaboration.TSourceFin convert(java.lang.Long id) {
                return TSourceFin.findTSourceFin(id);
            }
        };
    }
    
    public Converter<String, TSourceFin> ApplicationConversionServiceFactoryBean.getStringToTSourceFinConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TSourceFin>() {
            public com.mef.sigfip.elaboration.TSourceFin convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TSourceFin.class);
            }
        };
    }
    
    public Converter<TTypeBudget, String> ApplicationConversionServiceFactoryBean.getTTypeBudgetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TTypeBudget, java.lang.String>() {
            public String convert(TTypeBudget tTypeBudget) {
                return new StringBuilder().append(tTypeBudget.getLib_typ_budget()).toString();
            }
        };
    }
    
    public Converter<Long, TTypeBudget> ApplicationConversionServiceFactoryBean.getIdToTTypeBudgetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TTypeBudget>() {
            public com.mef.sigfip.elaboration.TTypeBudget convert(java.lang.Long id) {
                return TTypeBudget.findTTypeBudget(id);
            }
        };
    }
    
    public Converter<String, TTypeBudget> ApplicationConversionServiceFactoryBean.getStringToTTypeBudgetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TTypeBudget>() {
            public com.mef.sigfip.elaboration.TTypeBudget convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TTypeBudget.class);
            }
        };
    }
    
    public Converter<TTypeService, String> ApplicationConversionServiceFactoryBean.getTTypeServiceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mef.sigfip.elaboration.TTypeService, java.lang.String>() {
            public String convert(TTypeService tTypeService) {
                return new StringBuilder().append(tTypeService.getLib_typ_serv()).toString();
            }
        };
    }
    
    public Converter<Long, TTypeService> ApplicationConversionServiceFactoryBean.getIdToTTypeServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mef.sigfip.elaboration.TTypeService>() {
            public com.mef.sigfip.elaboration.TTypeService convert(java.lang.Long id) {
                return TTypeService.findTTypeService(id);
            }
        };
    }
    
    public Converter<String, TTypeService> ApplicationConversionServiceFactoryBean.getStringToTTypeServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mef.sigfip.elaboration.TTypeService>() {
            public com.mef.sigfip.elaboration.TTypeService convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TTypeService.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getTActionToStringConverter());
        registry.addConverter(getIdToTActionConverter());
        registry.addConverter(getStringToTActionConverter());
        registry.addConverter(getTActiviteToStringConverter());
        registry.addConverter(getIdToTActiviteConverter());
        registry.addConverter(getStringToTActiviteConverter());
        registry.addConverter(getTArticleToStringConverter());
        registry.addConverter(getIdToTArticleConverter());
        registry.addConverter(getStringToTArticleConverter());
        registry.addConverter(getTAxeDetToStringConverter());
        registry.addConverter(getIdToTAxeDetConverter());
        registry.addConverter(getStringToTAxeDetConverter());
        registry.addConverter(getTAxeScapeToStringConverter());
        registry.addConverter(getIdToTAxeScapeConverter());
        registry.addConverter(getStringToTAxeScapeConverter());
        registry.addConverter(getTBailleurToStringConverter());
        registry.addConverter(getIdToTBailleurConverter());
        registry.addConverter(getStringToTBailleurConverter());
        registry.addConverter(getTCategorieServiceToStringConverter());
        registry.addConverter(getIdToTCategorieServiceConverter());
        registry.addConverter(getStringToTCategorieServiceConverter());
        registry.addConverter(getTChapitreToStringConverter());
        registry.addConverter(getIdToTChapitreConverter());
        registry.addConverter(getStringToTChapitreConverter());
        registry.addConverter(getTClasseToStringConverter());
        registry.addConverter(getIdToTClasseConverter());
        registry.addConverter(getStringToTClasseConverter());
        registry.addConverter(getTFonctionToStringConverter());
        registry.addConverter(getIdToTFonctionConverter());
        registry.addConverter(getStringToTFonctionConverter());
        registry.addConverter(getTGestionToStringConverter());
        registry.addConverter(getIdToTGestionConverter());
        registry.addConverter(getStringToTGestionConverter());
        registry.addConverter(getTGrandeNatureToStringConverter());
        registry.addConverter(getIdToTGrandeNatureConverter());
        registry.addConverter(getStringToTGrandeNatureConverter());
        registry.addConverter(getTGroupeToStringConverter());
        registry.addConverter(getIdToTGroupeConverter());
        registry.addConverter(getStringToTGroupeConverter());
        registry.addConverter(getTImputBudgetaireToStringConverter());
        registry.addConverter(getIdToTImputBudgetaireConverter());
        registry.addConverter(getStringToTImputBudgetaireConverter());
        registry.addConverter(getTLigneToStringConverter());
        registry.addConverter(getIdToTLigneConverter());
        registry.addConverter(getStringToTLigneConverter());
        registry.addConverter(getTLocBenefToStringConverter());
        registry.addConverter(getIdToTLocBenefConverter());
        registry.addConverter(getStringToTLocBenefConverter());
        registry.addConverter(getTLocServiceToStringConverter());
        registry.addConverter(getIdToTLocServiceConverter());
        registry.addConverter(getStringToTLocServiceConverter());
        registry.addConverter(getTNumOrdreServToStringConverter());
        registry.addConverter(getIdToTNumOrdreServConverter());
        registry.addConverter(getStringToTNumOrdreServConverter());
        registry.addConverter(getTParagrapheToStringConverter());
        registry.addConverter(getIdToTParagrapheConverter());
        registry.addConverter(getStringToTParagrapheConverter());
        registry.addConverter(getTPrefectureToStringConverter());
        registry.addConverter(getIdToTPrefectureConverter());
        registry.addConverter(getStringToTPrefectureConverter());
        registry.addConverter(getTProgrammeToStringConverter());
        registry.addConverter(getIdToTProgrammeConverter());
        registry.addConverter(getStringToTProgrammeConverter());
        registry.addConverter(getTRegionToStringConverter());
        registry.addConverter(getIdToTRegionConverter());
        registry.addConverter(getStringToTRegionConverter());
        registry.addConverter(getTSectionToStringConverter());
        registry.addConverter(getIdToTSectionConverter());
        registry.addConverter(getStringToTSectionConverter());
        registry.addConverter(getTSourceFinToStringConverter());
        registry.addConverter(getIdToTSourceFinConverter());
        registry.addConverter(getStringToTSourceFinConverter());
        registry.addConverter(getTTypeBudgetToStringConverter());
        registry.addConverter(getIdToTTypeBudgetConverter());
        registry.addConverter(getStringToTTypeBudgetConverter());
        registry.addConverter(getTTypeServiceToStringConverter());
        registry.addConverter(getIdToTTypeServiceConverter());
        registry.addConverter(getStringToTTypeServiceConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
